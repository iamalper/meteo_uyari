name: BuildTask

on:
  workflow_dispatch:
    inputs:
      build_type:
        type: choice
        description: "Build type for app"
        options:
          - alpha
          - beta
          - stable
        required: true
      publish:
        type: boolean
        description: "Wheter publish to Google Play after build."
        default: false

jobs:
  build_android:

    runs-on: ubuntu-latest
    needs: version

    steps:

      - uses: actions/checkout@v3
      
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      
      - name: Update version in pubpsec.yaml
        run: sed -i 's/1.0.0+1/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
          
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
 
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Running flutter tests
        run: flutter test
  
      - name: Start appbundle build
        run: flutter build appbundle --dart-define=buildType=${{ github.event.inputs.build_type }}
        
      - name: Start apk build
        run: flutter build apk --dart-define=buildType=${{ github.event.inputs.build_type }}

      - name: Uploading android packages
        uses: actions/upload-artifact@v2
        with:
          name: builds
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  release:
    env:
      isRelease: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs: [build_android, version]
    steps:
      - uses: actions/checkout@v3

      - name: Downloading builds
        uses: actions/download-artifact@v3
        with: 
          name: builds

      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt

      - name: Releasing builds
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          automatic_release_tag: "v${{ steps.version.outputs.content }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: ${{ env.isRelease == 'false' }}
          files: | 
            flutter-apk/app-release.apk
            bundle/release/app-release.aab

  version:
    name: Create version number
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Create version.txt with MajorMinorPatch
        run: echo ${{ steps.gitversion.outputs.MajorMinorPatch }}${{ steps.gitversion.outputs.PreReleaseTagWithDash }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  google_play_publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.publish }}
    needs: [release]
    steps:
    - uses: actions/checkout@v2
    - name: Downloading builds
      uses: actions/download-artifact@v3
      with: 
         name: builds

    - name: Publishing
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT }}
        packageName: com.alper.meteo_uyari
        releaseFiles: bundle/release/app-release.aab
        track: internal
        status: draft
        changesNotSentForReview: false